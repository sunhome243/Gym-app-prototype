name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        # You may want to run additional linting tools if necessary
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        pytest

jobs:
  build-and-test-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build and push Docker images
      uses: docker/build-push-action@v6.2.0
      with:
        context: .  # Dockerfile이 위치한 디렉토리
        file: dockerfile_test  # 사용할 Dockerfile 이름
        tags: myapp:latest
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3.3.0
    - name: Run tests inside Docker
      run: |
        docker run --network host -e DATABASE_URL=${DATABASE_URL} myapp:latest pytest